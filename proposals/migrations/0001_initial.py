# Generated by Django 5.2.5 on 2025-10-07 22:54

import django.core.validators
import django.db.models.deletion
import proposals.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('cbo', '0001_initial'),
        ('common', '0001_initial'),
        ('expressions', '0001_initial'),
        ('geo', '0001_initial'),
        ('institutions', '0001_initial'),
        ('thematic_axes', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Proposal',
            fields=[
                ('expression_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='expressions.expression')),
                ('project_title_override', models.TextField(blank=True, help_text='Si se especifica, sobrescribe el título de la expresión.', null=True, verbose_name='Título del Proyecto')),
                ('principal_investigator_title', models.CharField(blank=True, max_length=100, verbose_name='Título del Investigador Principal')),
                ('principal_investigator_position', models.CharField(blank=True, max_length=100, verbose_name='Cargo actual del Investigador Principal')),
                ('total_requested_budget', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Presupuesto Total Solicitado')),
                ('principal_research_experience', models.TextField(blank=True, help_text='Máximo 250 palabras', max_length=1000, verbose_name='Experiencia en investigación del Investigador/a Principal')),
                ('community_description', models.TextField(blank=True, help_text='Descripción de la comunidad y su contexto', verbose_name='Comunidad y país')),
                ('duration_months', models.PositiveIntegerField(blank=True, help_text='Número de meses', null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Duración del proyecto')),
                ('summary', models.TextField(blank=True, help_text='Síntesis descriptiva de la propuesta (máximo 250 palabras)', max_length=1000, verbose_name='Resumen')),
                ('context_problem_justification', models.TextField(blank=True, help_text='Máximo 400 palabras', max_length=1600, verbose_name='Contexto, problema y justificación')),
                ('methodology_analytical_plan_ethics', models.TextField(blank=True, help_text='Máximo 1500 palabras', max_length=6000, verbose_name='Metodología, planeamiento analítico y aspectos éticos')),
                ('equity_inclusion', models.TextField(blank=True, help_text='Máximo 250 palabras', max_length=1000, verbose_name='Equidad, género, interseccionalidad e inclusión')),
                ('communication_strategy', models.TextField(blank=True, help_text='Máximo 100 palabras', max_length=400, verbose_name='Estrategia de comunicación')),
                ('risk_analysis_mitigation', models.TextField(blank=True, help_text='Máximo 200 palabras', max_length=800, verbose_name='Riesgos y plan de mitigación de riesgos')),
                ('research_team', models.TextField(blank=True, help_text='Máximo 900 palabras', max_length=3600, verbose_name='Equipo de investigación')),
                ('community_country', models.ForeignKey(blank=True, help_text='País de la comunidad involucrada', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='proposals_as_community_country', to='geo.country', verbose_name='País donde se desarrolla la comunidad')),
                ('community_organizations', models.ManyToManyField(blank=True, related_name='proposals', to='cbo.cbo', verbose_name='Organizaciones Comunitarias (CBO)')),
                ('partner_institutions', models.ManyToManyField(blank=True, related_name='proposals_as_partner', to='institutions.institution', verbose_name='Nombre y país de las instituciones aliadas')),
                ('project_location', models.ForeignKey(blank=True, help_text='País principal de implementación', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='proposals_as_project_location', to='geo.country', verbose_name='País donde se desarrollará el proyecto')),
                ('proposal_status', models.ForeignKey(help_text='Estado del ciclo de vida de la propuesta (Borrador, Enviada, Aprobada, etc.)', on_delete=django.db.models.deletion.PROTECT, to='common.status', verbose_name='Estado de la Propuesta')),
                ('thematic_axis_override', models.ForeignKey(blank=True, help_text='Si se especifica, sobrescribe el eje temático de la expresión.', limit_choices_to={'is_active': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, to='thematic_axes.thematicaxis', verbose_name='Eje Temático')),
            ],
            options={
                'verbose_name': 'Propuesta',
                'verbose_name_plural': 'Propuestas',
                'db_table': 'proposal',
            },
            bases=('expressions.expression',),
        ),
        migrations.CreateModel(
            name='ProposalDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Fecha Creacion')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha Actualizacion')),
                ('file', models.FileField(help_text='Sube archivos como PDF, DOCX. Máximo 10MB.', max_length=500, upload_to=proposals.models.proposal_file_upload_path, verbose_name='Archivo')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='Nombre del archivo')),
                ('document_type', models.CharField(choices=[('timeline', 'Cronograma'), ('budget', 'Presupuesto'), ('commitment', 'Carta de Compromiso')], max_length=50, verbose_name='Tipo de Documento')),
                ('proposal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='proposal_documents', to='proposals.proposal', verbose_name='Propuesta')),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.customuser', verbose_name='Cargado por')),
            ],
            options={
                'verbose_name': 'Documento de Propuesta',
                'verbose_name_plural': 'Documentos de Propuesta',
                'db_table': 'proposal_document',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='proposal',
            name='budget_document',
            field=models.ForeignKey(blank=True, help_text='Archivo adjunto (PDF, DOCX)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='proposals_budget', to='proposals.proposaldocument', verbose_name='Presupuesto'),
        ),
        migrations.AddField(
            model_name='proposal',
            name='partner_institution_commitments',
            field=models.ManyToManyField(blank=True, related_name='proposals_for_commitments', to='proposals.proposaldocument', verbose_name='Cartas de compromiso institucional'),
        ),
        migrations.AddField(
            model_name='proposal',
            name='timeline_document',
            field=models.ForeignKey(blank=True, help_text='Archivo adjunto (PDF, DOCX)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='proposals_timeline', to='proposals.proposaldocument', verbose_name='Cronograma'),
        ),
        migrations.CreateModel(
            name='ProposalSpecificObjective',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Fecha Creacion')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha Actualizacion')),
                ('title', models.CharField(max_length=200, verbose_name='Título')),
                ('description', models.TextField(blank=True, verbose_name='Descripción')),
                ('proposal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='specific_objectives', to='proposals.proposal')),
            ],
            options={
                'verbose_name': 'Objetivo Específico (Propuesta)',
                'verbose_name_plural': 'Objetivos Específicos (Propuesta)',
                'db_table': 'proposal_specific_objective',
            },
        ),
    ]
