# Generated by Django 5.2.5 on 2025-10-07 22:54

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('common', '0001_initial'),
        ('expressions', '0001_initial'),
        ('institutions', '0001_initial'),
        ('people', '0001_initial'),
        ('proposals', '0001_initial'),
        ('thematic_axes', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ExpressionTeamMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Fecha Creacion')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha Actualizacion')),
                ('role', models.CharField(max_length=100, verbose_name='Rol en el Proyecto')),
                ('start_date', models.DateField(verbose_name='Fecha de Inicio')),
                ('end_date', models.DateField(verbose_name='Fecha de Finalización')),
                ('expression', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='expression_team_members', to='expressions.expression', verbose_name='Expresión')),
                ('institution', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='institutions.institution', verbose_name='Institución')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='people.person', verbose_name='Persona')),
                ('status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='common.status', verbose_name='Estado de Participación')),
            ],
            options={
                'verbose_name': 'Miembro del Equipo (Expresión)',
                'verbose_name_plural': 'Miembros del Equipo (Expresión)',
                'db_table': 'expression_teammember',
                'ordering': ['expression', 'role'],
                'unique_together': {('expression', 'person')},
            },
        ),
        migrations.CreateModel(
            name='ExpressionInvestigatorThematicAntecedent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Fecha Creacion')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha Actualizacion')),
                ('description', models.TextField(verbose_name='Descripción del Antecedente')),
                ('evidence_url', models.URLField(blank=True, verbose_name='URL de Evidencia')),
                ('thematic_axis', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='thematic_axes.thematicaxis', verbose_name='Eje Temático')),
                ('team_member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expression_thematic_antecedents', to='project_team.expressionteammember', verbose_name='Miembro del Equipo (Expresión)')),
            ],
            options={
                'verbose_name': 'Antecedente en Eje Temático (Expresión)',
                'verbose_name_plural': 'Antecedentes en Ejes Temáticos (Expresión)',
                'db_table': 'investigator_thematic_antecedent',
            },
        ),
        migrations.CreateModel(
            name='InvestigatorCondition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Fecha Creacion')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha Actualizacion')),
                ('condition_text', models.TextField(verbose_name='Condición')),
                ('is_fulfilled', models.BooleanField(default=False, verbose_name='Cumplida')),
                ('fulfillment_date', models.DateField(blank=True, null=True, verbose_name='Fecha de Cumplimiento')),
                ('team_member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conditions', to='project_team.expressionteammember', verbose_name='Miembro del Equipo')),
            ],
            options={
                'verbose_name': 'Condición del Investigador',
                'verbose_name_plural': 'Condiciones de los Investigadores',
                'db_table': 'investigator_condition',
            },
        ),
        migrations.CreateModel(
            name='ProposalTeamMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Fecha Creacion')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha Actualizacion')),
                ('role', models.CharField(max_length=100, verbose_name='Rol en el Proyecto')),
                ('start_date', models.DateField(verbose_name='Fecha de Inicio')),
                ('end_date', models.DateField(verbose_name='Fecha de Finalización')),
                ('cv_file', models.FileField(blank=True, null=True, upload_to='proposal_team_cv/%Y/%m/%d/', verbose_name='C.V. Adjunto')),
                ('institution', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='institutions.institution', verbose_name='Institución')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='people.person', verbose_name='Persona')),
                ('proposal', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='proposal_team_members', to='proposals.proposal', verbose_name='Propuesta')),
                ('status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='common.status', verbose_name='Estado de Participación')),
            ],
            options={
                'verbose_name': 'Miembro del Equipo (Propuesta)',
                'verbose_name_plural': 'Miembros del Equipo (Propuesta)',
                'db_table': 'proposal_teammember',
                'ordering': ['proposal', 'role'],
                'unique_together': {('proposal', 'person')},
            },
        ),
        migrations.CreateModel(
            name='ProposalInvestigatorThematicAntecedent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Fecha Creacion')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha Actualizacion')),
                ('description', models.TextField(verbose_name='Descripción del Antecedente')),
                ('evidence_url', models.URLField(blank=True, verbose_name='URL de Evidencia')),
                ('thematic_axis', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='thematic_axes.thematicaxis', verbose_name='Eje Temático')),
                ('team_member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='thematic_antecedents', to='project_team.proposalteammember', verbose_name='Miembro del Equipo (Propuesta)')),
            ],
            options={
                'verbose_name': 'Antecedente en Eje Temático (Propuesta)',
                'verbose_name_plural': 'Antecedentes en Ejes Temáticos (Propuesta)',
                'db_table': 'proposal_investigator_antecedent',
            },
        ),
    ]
